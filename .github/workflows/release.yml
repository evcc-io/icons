name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.version }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Release
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: release
    if: needs.release.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [core, react, vue, web]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Update package versions
        run: |
          VERSION="${{ needs.release.outputs.version }}"

          # Update core package version
          if [ "${{ matrix.package }}" = "core" ]; then
            npm version $VERSION --no-git-tag-version
          fi

          # Update framework package versions
          if [ "${{ matrix.package }}" != "core" ]; then
            cd packages/${{ matrix.package }}
            npm version $VERSION --no-git-tag-version
            # Update dependency version
            npm pkg set dependencies.@evcc/icons="^$VERSION"
          fi

      - name: Publish core package
        if: matrix.package == 'core'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish framework package
        if: matrix.package != 'core'
        run: |
          cd packages/${{ matrix.package }}
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
