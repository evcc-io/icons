name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint and type check
        run: npm run lint

      - name: Lint SVGs
        run: npm run lint:svg

      - name: Build core package
        run: npm run build

      - name: Install package dependencies
        run: npm run install:packages

      - name: Build all packages with clean builds
        run: npm run build:packages:clean

      - name: Test examples
        run: npm run test:examples

  release:
    name: Release
    needs: ci
    runs-on: ubuntu-latest
    # Only run on main branch pushes, not on PRs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.version }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: |
          npm run build
          npm run build:packages:clean

      - name: Release
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to NPM
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.release_created == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: |
          npm run build
          npm run build:packages:clean

      - name: Publish core package
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish React package
        run: cd packages/react && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Vue package
        run: cd packages/vue && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Web package
        run: cd packages/web && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-docs:
    name: Build Documentation
    needs: [ci, release]
    runs-on: ubuntu-latest
    # Run if CI passes and either release succeeds or no release was attempted
    if: |
      always() && 
      needs.ci.result == 'success' && 
      (needs.release.result == 'success' || needs.release.result == 'skipped') &&
      github.ref == 'refs/heads/main' && 
      github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build documentation
        run: npm run build:docs

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs"

  deploy-docs:
    name: Deploy Documentation
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
